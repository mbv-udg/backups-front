{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {}\n  login(username, password) {\n    //fer la crida\n    localStorage.setItem(\"token\", \"ergeromgerpog\");\n    return new Observable(true); //TODO:\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n  }\n  isUserLoggedIn() {\n    return !!localStorage.getItem(\"token\");\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Observable","AuthService","constructor","login","username","password","localStorage","setItem","logout","removeItem","isUserLoggedIn","getItem","_","_2","factory","ɵfac","providedIn"],"sources":["/home/xarxes/server/backups-front/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  login(username: string, password: string): Observable<boolean> {\n    //fer la crida\n    localStorage.setItem(\"token\", \"ergeromgerpog\");\n    return new Observable(true); //TODO:\n  }\n\n  logout(): void {\n    localStorage.removeItem(\"token\");\n  }\n\n  isUserLoggedIn(): boolean {\n    return !!localStorage.getItem(\"token\");\n  }\n}\n"],"mappings":"AACA,SAASA,UAAU,QAAY,MAAM;;AAKrC,OAAM,MAAOC,WAAW;EAEtBC,YAAA,GAAgB;EAEhBC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,eAAe,CAAC;IAC9C,OAAO,IAAIP,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/B;;EAEAQ,MAAMA,CAAA;IACJF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;EAClC;EAEAC,cAAcA,CAAA;IACZ,OAAO,CAAC,CAACJ,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;EACxC;EAAC,QAAAC,CAAA,G;qBAhBUX,WAAW;EAAA;EAAA,QAAAY,EAAA,G;WAAXZ,WAAW;IAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}